//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_GestionarReporteService.NotificacionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificacionService.IEnviarCorreo")]
    public interface IEnviarCorreo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnviarCorreo/Enviar", ReplyAction="http://tempuri.org/IEnviarCorreo/EnviarResponse")]
        void Enviar(string Correo, string Asunto, string Mensaje, byte[] Archivo, string NombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnviarCorreo/Enviar", ReplyAction="http://tempuri.org/IEnviarCorreo/EnviarResponse")]
        System.Threading.Tasks.Task EnviarAsync(string Correo, string Asunto, string Mensaje, byte[] Archivo, string NombreArchivo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnviarCorreoChannel : WCF_GestionarReporteService.NotificacionService.IEnviarCorreo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnviarCorreoClient : System.ServiceModel.ClientBase<WCF_GestionarReporteService.NotificacionService.IEnviarCorreo>, WCF_GestionarReporteService.NotificacionService.IEnviarCorreo {
        
        public EnviarCorreoClient() {
        }
        
        public EnviarCorreoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnviarCorreoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnviarCorreoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnviarCorreoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Enviar(string Correo, string Asunto, string Mensaje, byte[] Archivo, string NombreArchivo) {
            base.Channel.Enviar(Correo, Asunto, Mensaje, Archivo, NombreArchivo);
        }
        
        public System.Threading.Tasks.Task EnviarAsync(string Correo, string Asunto, string Mensaje, byte[] Archivo, string NombreArchivo) {
            return base.Channel.EnviarAsync(Correo, Asunto, Mensaje, Archivo, NombreArchivo);
        }
    }
}
